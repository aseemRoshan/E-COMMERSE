<%- include("../../views/partials/admin/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        body {
            background-color: #141b2d;
            margin: 0;
            padding: 0;
            width: 100%;
            min-height: 100vh;
        }
        .content-main {
            min-height: 100vh;
            width: 100%;
            margin: 0;
            padding: 20px 40px;
            background-color: #141b2d;
        }
        .content-header {
            margin-bottom: 30px;
        }
        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem 2rem;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 2rem;
            width: 100%;
        }
        .dashboard-title {
            font-size: 1.75rem;
            color: #2d3748;
            font-weight: 600;
            margin: 0;
        }
        .content-title {
            color: white;
            font-size: 1.5rem;
            margin-bottom: 20px;
        }
        .col-9 {
            width: 100% !important;
            max-width: 100% !important;
        }
        .col-lg-6 {
            width: 100% !important;
            max-width: 100% !important;
            flex: 0 0 100% !important;
        }
        .card {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            width: 100%;
        }
        .card-header {
            background-color: #242c40;
            color: white;
            padding: 15px 20px;
            border-radius: 8px 8px 0 0;
        }
        .card-body {
            padding: 20px;
        }
        .row {
            display: flex;
            flex-wrap: wrap;
            margin: 0 -15px;
            width: 100%;
        }
        .col-lg-4 {
            flex: 0 0 calc(33.333% - 30px);
            max-width: calc(33.333% - 30px);
            margin: 0 15px;
        }
        .form-control, .form-select {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-bottom: 10px;
        }
        .form-label {
            font-weight: 500;
            margin-bottom: 8px;
            display: block;
        }
        .image-upload-container {
            display: flex;
            flex-direction: column;
            gap: 20px;
            width: 100%;
            padding: 20px;
        }
        .existing-images {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 15px;
            padding: 15px;
        }
        .thumbnails-container {
            display: flex;
            flex-direction: column;
            padding: 10px 0;
            gap: 10px;
        }
        .thumbnail {
            position: relative;
            margin-right: 10px;
        }
        .thumbnail img {
            width: 100%;
            height: auto;
            object-fit: cover;
            border-radius: 4px;
        }
        img[id^="imgView"] {
            width: 100%;
            max-width: 300px;
            height: auto;
            object-fit: contain;
            margin-bottom: 10px;
        }
        .image-cropper {
            width: 100%;
            max-width: 300px;
            margin: 20px auto;
        }
        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 5px;
            display: none;
        }
        .btn-md {
            padding: 10px 20px;
            background-color: #4299e1;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .btn-md:hover {
            background-color: #3182ce;
        }
        .fa-thin.fa-x {
            position: absolute;
            margin-left: .5rem;
            color: #dc3545;
            font-size: 1rem;
            transition: color 0.2s;
            cursor: pointer;
        }
        .fa-thin.fa-x:hover {
            color: #bd2130;
        }
        @media (max-width: 1200px) {
            .col-lg-4 {
                flex: 0 0 calc(50% - 30px);
                max-width: calc(50% - 30px);
            }
        }
        @media (max-width: 768px) {
            .content-main {
                padding: 15px;
            }
            .col-lg-4 {
                flex: 0 0 calc(100% - 30px);
                max-width: calc(100% - 30px);
            }
            .card-body {
                padding: 15px;
            }
            .image-upload-container {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <header class="dashboard-header">
                    <h1 class="dashboard-title">Edit Products</h1>
                    <div class="profile-badge"></div>
                </header>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <form id="productForm" method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data" onsubmit="return validateForm()">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" name="productName" value="<%=product.productName%>" class="form-control" id="product_name">
                                    <div id="productName-error" class="error-message"></div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Brand</label>
                                    <select class="form-select" name="brand">
                                        <%for(let i=0;i<brand.length;i++){%>
                                            <option value="<%=brand[i].brandName%>"><%=brand[i].brandName%></option>
                                        <%}%>
                                    </select>
                                    <div id="brand-error" class="error-message"></div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Description</label>
                                    <input name="descriptionData" value="<%=product.description%>" class="form-control">
                                    <div id="description-error" class="error-message"></div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Regular price</label>
                                            <input placeholder="$" name="regularPrice" type="text" value="<%=product.regularPrice%>" class="form-control">
                                            <div id="regularPrice-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Sale price</label>
                                            <input name="salePrice" type="text" value="<%=product.salePrice%>" class="form-control">
                                            <div id="salePrice-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Quantity</label>
                                            <input name="quantity" type="text" value="<%=product.quantity%>" class="form-control">
                                            <div id="quantity-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Color</label>
                                            <input name="color" type="text" value="<%=product.color%>" class="form-control">
                                            <div id="color-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Category</label>
                                            <select class="form-select" name="category">
                                                <%for(let i=0;i<cat.length;i++){%>
                                                    <option value="<%=cat[i].name%>"><%=cat[i].name%></option>
                                                <%}%>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h4>Product Images</h4>
                                    </div>
                                    <div class="card-body">
                                        <!-- Existing Images -->
                                        <div class="existing-images mb-4">
                                            <%for(let i=0;i<product.productImage.length;i++){%>
                                                <div class="col-md-12" id="existingImages<%=product.productImage[i]%>">
                                                    <div class="mb-4">
                                                        <div class="col-12">
                                                            <td>
                                                                <input type="hidden" value="<%=product.productImage[i]%>" id="imageDatas">
                                                                <img class="rounded" style="width: 100%; height: auto;" src="/uploads/re-image/<%=product.productImage[i]%>" alt="">
                                                                <i onclick="deleteSingleImage('<%=product.productImage[i]%>','<%=product._id%>')" class="fa fa-times"></i>
                                                            </td>
                                                        </div>
                                                    </div>
                                                </div>
                                            <%}%>
                                        </div>
                                        <!-- New Image Uploads -->
                                        <div class="image-upload-container">
                                            <input type="file" id="imageInput" name="images" multiple accept="image/png, image/jpeg, image/jpg" style="display: none;">
                                            <button type="button" class="btn btn-primary" onclick="document.getElementById('imageInput').click()">Select Images</button>
                                            <div id="addedImagesContainer"></div>
                                        </div>
                                        <div id="images-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div>
                                    <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="button" onclick="validateAndSubmit()">Update</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <%- include("../../views/partials/admin/footer") %>
    <script>
        const selectedImages = [];
        document.getElementById("imageInput").addEventListener("change", handleFileSelect);

        function handleFileSelect(event) {
            const addedImagesContainer = document.getElementById("addedImagesContainer");
            const files = event.target.files;
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                selectedImages.push(file);
                const thumbnail = document.createElement("div");
                thumbnail.classList.add("thumbnail", "mb-3");
                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";
                img.style.width = "100%";
                img.style.height = "auto";
                img.style.objectFit = "cover";
                const removeIcon = document.createElement("span");
                removeIcon.classList.add("remove-icon");
                removeIcon.innerHTML = "&times;";
                removeIcon.addEventListener("click", function () {
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }
                    thumbnail.remove();
                });
                const cropButton = document.createElement("button");
                cropButton.type = 'button';
                cropButton.classList.add("btn", "btn-sm", "btn-secondary", "mb-1");
                cropButton.innerText = "Crop";
                cropButton.addEventListener("click", function () {
                    const cropperContainer = document.createElement("div");
                    cropperContainer.classList.add("image-cropper", "d-flex", "align-items-center");
                    const croppedImg = document.createElement("img");
                    croppedImg.src = img.src;
                    cropperContainer.appendChild(croppedImg);
                    const saveButton = document.createElement("button");
                    saveButton.classList.add("btn", "btn-sm", "btn-primary", "mb-1");
                    saveButton.innerText = "Save";
                    thumbnail.appendChild(cropperContainer);
                    thumbnail.appendChild(saveButton);
                    const cropper = new Cropper(croppedImg, {
                        aspectRatio: 1,
                        viewMode: 1,
                        guides: true,
                        background: false,
                        autoCropArea: 1,
                        zoomable: true
                    });
                    saveButton.addEventListener("click", function () {
                        const croppedCanvas = cropper.getCroppedCanvas();
                        const croppedImage = croppedCanvas.toDataURL('image/jpeg', 1.0);
                        img.src = croppedImage;
                        cropperContainer.remove();
                        saveButton.remove();
                        const croppedFile = dataURLtoFile(croppedImage, file.name);
                        const index = selectedImages.indexOf(file);
                        if (index !== -1) {
                            selectedImages[index] = croppedFile;
                        }
                    });
                });
                const changeButton = document.createElement("button");
                changeButton.classList.add("btn", "btn-sm", "btn-primary", "mb-1");
                changeButton.type = 'button';
                changeButton.innerText = "Change";
                changeButton.addEventListener("click", function () {
                    const newInput = document.createElement("input");
                    newInput.type = "file";
                    newInput.accept = "image/png, image/jpeg, image/jpg";
                    newInput.style.display = "none";
                    newInput.addEventListener("change", function (e) {
                        const newFile = e.target.files[0];
                        img.src = URL.createObjectURL(newFile);
                        const index = selectedImages.indexOf(file);
                        if (index !== -1) {
                            selectedImages[index] = newFile;
                        }
                    });
                    newInput.click();
                });
                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                thumbnail.appendChild(cropButton);
                thumbnail.appendChild(changeButton);
                addedImagesContainer.appendChild(thumbnail);
            }
        }

        function validateAndSubmit() {
            if (validateForm()) {
                const formData = new FormData(document.getElementById('productForm'));
                formData.delete('images');
                selectedImages.forEach((file, index) => {
                    formData.append(`images`, file);
                });
                fetch(`/admin/editProduct/<%=product._id%>`, {
                    method: 'POST',
                    body: formData
                }).then(response => {
                    if (response.ok) {
                        window.location.href = '/admin/products';
                    } else {
                        console.error('Error submitting form');
                    }
                });
            }
        }

        function validateForm() {
            let imageDatas = false;
            console.log("validate form");
            clearErrorMessages();
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementsByName('descriptionData')[0].value;
            const brand = document.getElementsByName('brand')[0].value;
            const price = document.getElementsByName('regularPrice')[0].value;
            const salePrice = document.getElementsByName('salePrice')[0].value;
            const color = document.getElementsByName('color')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const images = document.getElementById('imageInput');
            const quantity = document.getElementsByName('quantity')[0].value;
            imageDatas = document.getElementById("imageDatas")?.value;
            let isValid = true;
            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            }
            if (description === '') {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }
            if (isNaN(parseInt(quantity)) || parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }
            if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }
            if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }
            if (color.trim() === "") {
                displayErrorMessage('color-error', 'Please enter a color.');
                isValid = false;
            }
            if (!imageDatas && images.files.length === 0) {
                displayErrorMessage("images-error", 'Please select an image.');
                isValid = false;
            }
            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
        }

        function dataURLtoFile(dataURL, filename) {
            const arr = dataURL.split(',');
            const mime = arr[0].match(/:(.*?);/)[1];
            const bstr = atob(arr[1]);
            let n = bstr.length;
            const u8arr = new Uint8Array(n);
            while (n--) {
                u8arr[n] = bstr.charCodeAt(n);
            }
            return new File([u8arr], filename, { type: mime });
        }

        function deleteSingleImage(imageId, productId) {
            $.ajax({
                url: "/admin/deleteImage",
                method: "post",
                data: { imageNameToServer: imageId, productIdToServer: productId },
                success: (response) => {
                    console.log(response);
                    if (response.status) {
                        console.log(document.getElementById(`existingImages${imageId}`));
                        document.getElementById(`existingImages${imageId}`).remove();
                    }
                }
            });
        }
    </script>
</body>
</html>
