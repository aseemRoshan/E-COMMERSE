<%- include("../../views/partials/admin/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
        body {
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
            width: 100%;
            min-height: 100vh;
        }

        .content-wrapper {
            display: flex;
            min-height: 100vh;
            width: 100%;
            margin: 0;
            padding: 0;
        }

        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem 2rem;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 2rem;
            width: 100%;
        }

        .dashboard-title {
            font-size: 1.75rem;
            color: #2d3748;
            font-weight: 600;
            margin: 0;
        }

        .sidebar {
            width: 250px;
            background-color: white;
            color: black;
            padding: 20px;
            flex-shrink: 0;
        }

        .main-content {
            flex: 1;
            padding: 20px 40px;
            background-color: #f8f9fa;
            width: calc(100% - 250px);
            min-width: 0; 
        }

        .product-form-container {
            width: 100%;
            max-width: 1800px; 
            margin: 0 auto;
        }

        .product-form {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            padding: 30px;
            width: 100%;
        }

        .row {
            width: 100%;
            margin: 0;
        }

        .card {
            width: 100%;
            margin-bottom: 20px;
        }

        .card-body {
            padding: 20px;
        }

        
        .form-control, .form-select {
            width: 100%;
        }

        
        .card-header {
            width: 100%;
        }

        .image-upload-container {
            display: flex;
            flex-direction: column;
            gap: 20px;
            width: 100%;
            padding: 20px;
        }

        .image-upload-item {
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        img[id^="imgView"] {
            max-width: 80%; 
            height: auto;
            margin-bottom: 10px;
        }

        .image-cropper {
            width: 100%;
            max-width: 400px; 
            margin: 0 auto;
        }

        
        @media (max-width: 1200px) {
            .main-content {
                padding: 20px;
            }
        }

        @media (max-width: 768px) {
            .content-wrapper {
                flex-direction: column;
            }

            .sidebar {
                width: 100%;
            }

            .main-content {
                width: 100%;
                margin-left: 0;
                padding: 15px;
            }

            .product-form {
                padding: 15px;
            }
        }

        
        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 5px;
            display: none;
        }

        
        .btn-md {
            padding: 10px 20px;
            background-color: #4299e1;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .btn-md:hover {
            background-color: #3182ce;
        }

        .thumbnail {
            position: relative;
            border: 1px solid #ddd;
            padding: 20px;
            border-radius: 5px;
            width: 100%;
        }

        .remove-icon {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            font-size: 1.5rem;
            color: #dc3545;
        }

        .thumbnail img {
            border-radius: 5px;
            max-width: 80%; 
            height: auto;
        }

        .thumbnail button {
            margin-top: 10px;
            width: 100%;
        }
    </style>
</head>
<body>
    <div class="content-wrapper">
        <div class="main-content">
            <div class="product-form-container">
                <header class="dashboard-header">
                    <h1 class="dashboard-title">Add New Products</h1>
                    <div class="profile-badge"></div>
                </header>
                <div class="row">
                    <div class="col-12">
                        <form id="productForm" class="product-form" method="post" action="/admin/product-add" enctype="multipart/form-data" onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text"  placeholder="Type here" name="productName" class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% for(let i=0; i<brand.length; i++) { %>
                                        <option value="<%= brand[i].brandName %>"><%= brand[i].brandName %></option>
                                    <% } %>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea  placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input  placeholder="$" name="regularPrice" type="text" class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input  placeholder="$" name="salePrice" type="text" class="form-control border">
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="" name="quantity" type="text" class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Color</label>
                                        <input  name="color" type="text" class="form-control border">
                                        <div id="color-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <% for(let i=0; i<cat.length; i++) { %>
                                                    <option value="<%= cat[i].name %>"><%= cat[i].name %></option>
                                                <% } %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card">
                                <div class="card-header" style="background-color: #242c40; color: white;">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="image-upload-container">
                                    <input type="file" id="imageInput" name="images" multiple accept="image/png, image/jpeg, image/jpg" style="display: none;">
                                    <button type="button" class="btn btn-primary" onclick="document.getElementById('imageInput').click()">Select Images</button>
                                    <div id="addedImagesContainer"></div>
                                </div>
                            </div>
                            <div>
                                <button class="btn btn-md rounded font-sm hover-up" type="button" onclick="validateAndSubmit()">Publish</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <%- include("../../views/partials/admin/footer") %>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script>
       const selectedImages = [];
document.getElementById("imageInput").addEventListener("change", handleFileSelect);

function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById("addedImagesContainer");
    const files = event.target.files;
    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        selectedImages.push(file);
        const thumbnail = document.createElement("div");
        thumbnail.classList.add("thumbnail", "mb-3");
        const img = document.createElement("img");
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "100%";
        img.style.height = "auto";
        img.style.objectFit = "cover";
        const removeIcon = document.createElement("span");
        removeIcon.classList.add("remove-icon");
        removeIcon.innerHTML = "&times;";
        removeIcon.addEventListener("click", function () {
            const index = selectedImages.indexOf(file);
            if (index !== -1) {
                selectedImages.splice(index, 1);
            }
            thumbnail.remove();
        });
        const cropButton = document.createElement("button");
        cropButton.type ='button'
        cropButton.classList.add("btn", "btn-sm", "btn-secondary", "mb-1");
        cropButton.innerText = "Crop";
        cropButton.addEventListener("click", function () {
            const cropperContainer = document.createElement("div");
            cropperContainer.classList.add("image-cropper", "d-flex", "align-items-center");
            const croppedImg = document.createElement("img");
            croppedImg.src = img.src;
            cropperContainer.appendChild(croppedImg);
            const saveButton = document.createElement("button");
            saveButton.classList.add("btn", "btn-sm", "btn-primary", "mb-1");
            saveButton.innerText = "Save";
            thumbnail.appendChild(cropperContainer);
            thumbnail.appendChild(saveButton);
            const cropper = new Cropper(croppedImg, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 1,
                zoomable: true
            });
            saveButton.addEventListener("click", function () {
                const croppedCanvas = cropper.getCroppedCanvas();
                const croppedImage = croppedCanvas.toDataURL('image/jpeg', 1.0);
                img.src = croppedImage;
                cropperContainer.remove();
                saveButton.remove();

                // Save the cropped image to the selectedImages array
                const croppedFile = dataURLtoFile(croppedImage, file.name);
                const index = selectedImages.indexOf(file);
                if (index !== -1) {
                    selectedImages[index] = croppedFile;
                }
            });
        });
        const changeButton = document.createElement("button");
        changeButton.classList.add("btn", "btn-sm", "btn-primary", "mb-1");
        changeButton.type ='button'
        changeButton.innerText = "Change";
        changeButton.addEventListener("click", function () {
            const newInput = document.createElement("input");
            newInput.type = "file";
            newInput.accept = "image/png, image/jpeg, image/jpg";
            newInput.style.display = "none";
            newInput.addEventListener("change", function (e) {
                const newFile = e.target.files[0];
                img.src = URL.createObjectURL(newFile);
                const index = selectedImages.indexOf(file);
                if (index !== -1) {
                    selectedImages[index] = newFile;
                }
            });
            newInput.click();
        });
        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        thumbnail.appendChild(cropButton);
        thumbnail.appendChild(changeButton);
        addedImagesContainer.appendChild(thumbnail);
    }
}

function validateAndSubmit() {
    if (validateForm()) {
        const formData = new FormData(document.getElementById('productForm'));

    // Remove the image field from formData
    formData.delete('images');



        selectedImages.forEach((file, index) => {
            formData.append(`images`, file);
        });
        
        fetch('/admin/product-add', {
            method: 'POST',
            body: formData
        }).then(response => {
            if (response.ok) {
                window.location.href = '/admin/product-add';
            } else {
                console.error('Error submitting form');
            }
        });
    }
}

function validateForm() {
    let imageDatas = false;
    console.log("validate form");
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementsByName('description')[0].value;
    const brand = document.getElementsByName('brand')[0].value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const category = document.getElementsByName('category')[0].value;
    const images = document.getElementById('imageInput');
    const quantity = document.getElementsByName('quantity')[0].value;
    imageDatas = document.getElementById("imageDatas")?.value;
    let isValid = true;
    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    }
    if (description === '') {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }
    if (isNaN(parseInt(quantity)) || parseInt(quantity) < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }
    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }
    if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }
    if (color.trim() === "") {
        displayErrorMessage('color-error', 'Please enter a color.');
        isValid = false;
    }
    if (!imageDatas && images.files.length === 0) {
        displayErrorMessage("images-error", 'Please select an image.');
        isValid = false;
    }
    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
    });
    const errorMessage = document.getElementById('errorMessage');
}

function dataURLtoFile(dataURL, filename) {
    const arr = dataURL.split(',');
    const mime = arr[0].match(/:(.*?);/)[1];
    const bstr = atob(arr[1]);
    let n = bstr.length;
    const u8arr = new Uint8Array(n);
    while (n--) {
        u8arr[n] = bstr.charCodeAt(n);
    }
    return new File([u8arr], filename, { type: mime });
}
    </script>
</body>
</html>
