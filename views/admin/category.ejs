<!DOCTYPE html>
<html lang="en">
<head>
    <%- include("../../views/partials/admin/header") %>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
    <style>
        :root {
            --primary: #4f46e5;
            --primary-hover: #4338ca;
            --secondary: #64748b;
            --success: #22c55e;
            --danger: #ef4444;
            --warning: #f59e0b;
            --info: #3b82f6;
            --background: #141b2d;
            --surface: #ffffff;
            --text: #1e293b;
            --border: #e2e8f0;
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
        }

        body {
            font-family: 'Inter', system-ui, -apple-system, sans-serif;
            background-color: var(--background);
            color: var(--text);
            line-height: 1.5;
            background-color: #f8f9fa;
        }

        .dashboard-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

    


        .dashboard-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 2rem;
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    margin-bottom: 2rem;
    width: 100%;
}

.dashboard-title {
    font-size: 1.75rem;
    color: #2d3748;
    font-weight: 600;
    margin: 0;
}




        .search-container {
            max-width: 500px;
            margin: 0 auto 2rem;
        }

        .search-input {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 1px solid var(--border);
            border-radius: 9999px;
            background-color: var(--surface);
            transition: all 0.2s;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }

        .content-grid {
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 2rem;
        }

        .category-form {
            background: var(--surface);
            padding: 1.5rem;
            border-radius: 0.75rem;
            box-shadow: var(--shadow);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-weight: 500;
            margin-bottom: 0.5rem;
            color: var(--text);
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border);
            border-radius: 0.5rem;
            transition: all 0.2s;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
        }

        .error-message {
            color: var(--danger);
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            border-radius: 0.5rem;
            transition: all 0.2s;
            cursor: pointer;
            text-decoration: none;
        }

        .btn-primary {
            background-color: var(--primary);
            color: white;
            border: none;
        }

        .btn-primary:hover {
            background-color: var(--primary-hover);
        }

        .btn-info {
            background-color: var(--info);
            color: white;
            border: none;
        }

        .btn-danger {
            background-color: var(--danger);
            color: white;
            border: none;
        }

        .btn-success {
            background-color: var(--success);
            color: white;
            border: none;
        }

        .categories-table {
            background: var(--surface);
            border-radius: 0.75rem;
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th {
            background-color: #f8fafc;
            padding: 1rem;
            text-align: left;
            font-weight: 500;
            color: var(--secondary);
        }

        .table td {
            padding: 1rem;
            border-top: 1px solid var(--border);
        }

        .badge {
            display: inline-flex;
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .badge-success {
            background-color: #dcfce7;
            color: #166534;
        }

        .badge-danger {
            background-color: #fee2e2;
            color: #991b1b;
        }

        .pagination {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 2rem;
        }

        .pagination a, 
        .pagination .current-page {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.5rem 1rem;
            border: 1px solid var(--border);
            border-radius: 0.5rem;
            color: var(--text);
            text-decoration: none;
            transition: all 0.2s;
        }

        .pagination a:hover {
            background-color: #f8fafc;
        }

        .pagination .current-page {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        @media (max-width: 1024px) {
            .content-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
      
   <header class="dashboard-header">
    <h1 class="dashboard-title">Category</h1>
    <div class="profile-badge"></div>
    </header>

        <div class="search-container">
            <form action="/admin/category/" method="get">
                <input type="text" class="search-input" placeholder="Search categories" name="search">
            </form>
        </div>

        <div class="content-grid">
            <!-- Category Form -->
            <div class="category-form">
                <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                    <div class="form-group">
                        <label class="form-label" for="product_name">Category Name</label>
                        <input type="text" name="name" placeholder="Enter category name" class="form-control" id="product_name" required/>
                        <div id="name-error" class="error-message"></div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Description</label>
                        <textarea placeholder="Enter category description" name="description" class="form-control" id="descriptionId" required></textarea>
                        <div id="description-error" class="error-message"></div>
                    </div>

                    <button class="btn btn-primary" type="submit" style="width: 100%">
                        Create Category
                    </button>
                </form>
            </div>

            <!-- Categories Table -->
            <div class="categories-table">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Offer Price</th>
                            <th>Offer</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% cat.reverse().forEach((category, index) => { %>
                            <tr>
                                <td><%= category.name %></td>
                                <td><%= category.description %></td>
                                <td><%= category.categoryOffer ? `${category.categoryOffer}%` : '0%' %></td>
                                <td>
                                    <% if(category.categoryOffer === 0) { %>
                                        <button class="btn btn-info" onclick="addOffer('<%= category._id %>')">
                                            Add Offer
                                        </button>
                                    <% } else { %>
                                        <button class="btn btn-danger" onclick="removeOffer('<%= category._id %>')">
                                            Remove
                                        </button>
                                    <% } %>
                                </td>
                                <td>
                                    <% if(category.isListed) { %>
                                        <span class="badge badge-success">Listed</span>
                                    <% } else { %>
                                        <span class="badge badge-danger">Unlisted</span>
                                    <% } %>
                                </td>
                                <td>
                                    <div style="display: flex; gap: 0.5rem;">
                                        <% if(category.isListed) { %>
                                            <a href="/admin/listCategory?id=<%= category._id %>" class="btn btn-danger">Unlist</a>
                                        <% } else { %>
                                            <a href="/admin/unlistCategory?id=<%= category._id %>" class="btn btn-success">List</a>
                                        <% } %>
                                        <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info">Edit</a>

                                    </div>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        <div class="pagination">
            <% if(currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
            <% } %>
            
            <% for(let i = 1; i <= totalPages; i++) { %>
                <% if(i === currentPage) { %>
                    <span class="current-page"><%= i %></span>
                <% } else { %>
                    <a href="?page=<%= i %>"><%= i %></a>
                <% } %>
            <% } %>
            
            <% if(currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    
    <!-- Your existing JavaScript code remains the same -->
    <script>
        function handleFormSubmit(event) {
    event.preventDefault();
    if (!validateForm()) {
        return;
    }
    const name = document.getElementsByName("name")[0].value; // Corrected
    const description = document.getElementById("descriptionId").value; // Corrected

    fetch("/admin/addCategory", {
        method: "POST",
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ name, description })
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        return response.json();
    })
    .then(data => {
        location.reload();
    })
    .catch(error => {
        if (error.message === "Category already exists") {
            Swal.fire({
                icon: "error",
                title: "Oops",
                text: "Category already exists"
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Oops",
                text: "An error occurred while adding the category",
            });
        }
    });
}

function validateForm() {
    clearErrorMessage();
    const name = document.getElementsByName("name")[0].value.trim(); // Corrected
    const description = document.getElementById("descriptionId").value.trim(); // Corrected
    let isValid = true;

    if (name === "") {
        displayErrorMessage("name-error", "Please enter a name");
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
        isValid = false;
    }
    if (description === "") {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
    }
    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessage() {
    const errorElements = document.getElementsByClassName("error-message");
    Array.from(errorElements).forEach((element) => {
        element.innerText = ""; // Corrected
        element.style.display = "none";
    });
}


async function addOffer (categoryId){
  const {value:amount} = await Swal.fire({
    title:"Offer in percentage",
    input:"number",
    inputLabel:"Percentage",
    inputPlaceholder:"%",
  });

  if(amount){
      try {
        const response = await fetch("/admin/addCategoryOffer",{
          method:"POST",
          headers:{
            'Content-type':'application/json',
          },
          body:JSON.stringify({
            percentage:amount,
            categoryId:categoryId,
          }),
        });

        const data = await response.json();
        if(response.ok && data.status === true){
          Swal.fire(
            "Offer added",
            "The offer has been added",
            "success"
          ).then(()=>{
            location.reload();
          })
        }else{
          Swal.fire("Failed",data.message || "Adding offer failed", "error");

        }

      } catch (error) {
        Swal.fire(
          "Error",
          "An error occured while adding the offer",
          "error"
        );
        console.log("Error adding offer",error);
        
      }
  }
}


async function removeOffer(categoryId){
  try {
      const response = await fetch("/admin/removeCategoryOffer" , {
        method:"POST",
        headers:{
          "Content-type":"application/json",
        },
        body:JSON.stringify({
          categoryId:categoryId,
        })
      }) 


     const data = await response.json();

     if(response.ok && data.status === true){
      Swal.fire(
        "Offer removed",
        "The offer has been removed",
        "Success"
      ).then(()=>{
        location.reload();
      });
     }else {
      Swal.fire("Failed", data.message || "Removing offer failed", "error");
     }

  } catch (error) {
      Swal.fire(
        "Error",
        "An error occured while removing the offer",
        "error"
      );
      console.error("Error removing offer",error);
  }
}







    </script>

    <%- include("../../views/partials/admin/footer") %>
</body>
</html>