<%- include("../../views/partials/admin/header") %>
<div class="main-content">
    <div class="content">
        <div class="topbar">
            <h1>Dashboard</h1>
            <div class="profile"></div>
        </div>
        <div class="date-filters">
            <div class="filter-group">
                <button class="date-filter active" data-range="1">1 Day</button>
                <button class="date-filter" data-range="7">1 Week</button>
                <button class="date-filter" data-range="30">1 Month</button>
                <button class="date-filter" data-range="365">1 Year</button> <!-- Added 1 Year filter -->
            </div>
            <div class="custom-date-group">
                <input type="date" id="startDate" value="<%= startDate || new Date().toISOString().split('T')[0] %>">
                <span class="date-separator">to</span>
                <input type="date" id="endDate" value="<%= endDate || new Date().toISOString().split('T')[0] %>">
                <button class="apply-filter">Apply</button>
            </div>
            <div class="export-group">
                <button class="export-btn" id="exportExcel">
                    <i class="fas fa-file-excel"></i> Export Excel
                </button>
                <button class="export-btn" id="exportPdf">
                    <i class="fas fa-file-pdf"></i> Export PDF
                </button>
            </div>
        </div>
        <div class="dashboard-cards">
            <div class="card sales-card">
                <div class="card-body">
                    <i class="fas fa-chart-line"></i>
                    <div class="card-content">
                        <h5 class="card-title">Total Sales</h5>
                        <p class="card-text">₹<%= totalSales %></p>
                    </div>
                </div>
            </div>
            <div class="card orders-card">
                <div class="card-body">
                    <i class="fas fa-shopping-cart"></i>
                    <div class="card-content">
                        <h5 class="card-title">Total Orders</h5>
                        <p class="card-text"><%= totalOrders %></p>
                    </div>
                </div>
            </div>
            <div class="card returns-card">
                <div class="card-body">
                    <i class="fas fa-undo"></i>
                    <div class="card-content">
                        <h5 class="card-title">Returned Orders</h5>
                        <p class="card-text"><%= returnedOrders %></p>
                    </div>
                </div>
            </div>
            <div class="card pending-card">
                <div class="card-body">
                    <i class="fas fa-hourglass-half"></i>
                    <div class="card-content">
                        <h5 class="card-title">Pending Orders</h5>
                        <p class="card-text"><%= pendingOrders %></p>
                    </div>
                </div>
            </div>
            <div class="card delivered-card">
                <div class="card-body">
                    <i class="fas fa-check-circle"></i>
                    <div class="card-content">
                        <h5 class="card-title">Delivered Orders</h5>
                        <p class="card-text"><%= deliveredOrders %></p>
                    </div>
                </div>
            </div>
            <div class="card shipped-card">
                <div class="card-body">
                    <i class="fas fa-truck"></i>
                    <div class="card-content">
                        <h5 class="card-title">Shipped Orders</h5>
                        <p class="card-text"><%= shippedOrders %></p>
                    </div>
                </div>
            </div>
            <div class="card users-card">
                <div class="card-body">
                    <i class="fas fa-users"></i>
                    <div class="card-content">
                        <h5 class="card-title">Total Users</h5>
                        <p class="card-text"><%= totalUsers %></p>
                    </div>
                </div>
            </div>
            <div class="card discount-card">
                <div class="card-body">
                    <i class="fas fa-tags"></i>
                    <div class="card-content">
                        <h5 class="card-title">Total Discount</h5>
                        <p class="card-text">₹<%= totalDiscount %></p>
                    </div>
                </div>
            </div>
        </div>
        <div class="chart-container">
            <div class="chart-controls">
                <label class="toggle-switch">
                    <input type="checkbox" id="toggleSales" checked>
                    <span class="slider">Sales</span>
                </label>
                <label class="toggle-switch">
                    <input type="checkbox" id="toggleOrders" checked>
                    <span class="slider">Orders</span>
                </label>
                <label class="toggle-switch">
                    <input type="checkbox" id="toggleDiscounts" checked>
                    <span class="slider">Discounts</span>
                </label>
            </div>
            <canvas id="salesChart"></canvas>
        </div>
        <div class="top-sellers-container">
            <div class="top-seller-section">
                <h3>Top 10 Best Selling Products</h3>
                <div class="top-seller-list" id="topProducts">
                    <%- topProducts === '[]' ? '<p>No products sold in this period</p>' : '' %>
                    <% JSON.parse(topProducts).forEach((product, index) => { %>
                        <div class="top-seller-item">
                            <span class="rank"><%= index + 1 %></span>
                            <div class="item-details">
                                <span class="item-name"><%= product.name %></span>
                                <span class="item-stats">Sold: <%= product.totalSold %> | Revenue: ₹<%= product.totalRevenue.toFixed(2) %></span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
            <div class="top-seller-section">
                <h3>Top 10 Best Selling Categories</h3>
                <div class="top-seller-list" id="topCategories">
                    <%- topCategories === '[]' ? '<p>No categories sold in this period</p>' : '' %>
                    <% JSON.parse(topCategories).forEach((category, index) => { %>
                        <div class="top-seller-item">
                            <span class="rank"><%= index + 1 %></span>
                            <div class="item-details">
                                <span class="item-name"><%= category.name %></span>
                                <span class="item-stats">Sold: <%= category.totalSold %> | Revenue: ₹<%= category.totalRevenue.toFixed(2) %></span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
            <div class="top-seller-section">
                <h3>Top 10 Best Selling Brands</h3>
                <div class="top-seller-list" id="topBrands">
                    <%- topBrands === '[]' ? '<p>No brands sold in this period</p>' : '' %>
                    <% JSON.parse(topBrands).forEach((brand, index) => { %>
                        <div class="top-seller-item">
                            <span class="rank"><%= index + 1 %></span>
                            <div class="item-details">
                                <span class="item-name"><%= brand.name %></span>
                                <span class="item-stats">Sold: <%= brand.totalSold %> | Revenue: ₹<%= brand.totalRevenue.toFixed(2) %></span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
  :root {
    --primary-color: #4361ee;
    --secondary-color: #3f37c9;
    --success-color: #4cc9f0;
    --danger-color: #f72585;
    --warning-color: #f8961e;
    --info-color: #4895ef;
    --light-color: #f8f9fa;
    --dark-color: #212529;
    --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    --transition-speed: 0.3s;
    --border-radius: 12px;
  }

  /* Existing styles remain mostly unchanged, adding new styles for top sellers */
  .top-sellers-container {
    margin-top: 40px;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 24px;
  }

  .top-seller-section {
    background-color: #fff;
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    padding: 20px;
    transition: transform var(--transition-speed), box-shadow var(--transition-speed);
  }

  .top-seller-section:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
  }

  .top-seller-section h3 {
    margin: 0 0 15px 0;
    font-size: 20px;
    font-weight: 600;
    color: var(--dark-color);
    border-bottom: 1px solid #eaedf2;
    padding-bottom: 10px;
  }

  .top-seller-list {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .top-seller-item {
    display: flex;
    align-items: center;
    padding: 10px;
    background-color: #f9fafd;
    border-radius: 8px;
    transition: background-color var(--transition-speed);
  }

  .top-seller-item:hover {
    background-color: #f0f5ff;
  }

  .rank {
    width: 30px;
    height: 30px;
    background-color: var(--primary-color);
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    margin-right: 12px;
    flex-shrink: 0;
  }

  .item-details {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .item-name {
    font-size: 16px;
    font-weight: 500;
    color: #1e293b;
  }

  .item-stats {
    font-size: 14px;
    color: #64748b;
  }

  /* Existing styles for context */
  .chart-container {
    margin-top: 230px;
    padding: 20px;
    background-color: #fff;
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    max-width: 100%;
    overflow-x: auto;
  }

  #salesChart {
    max-height: 400px;
    width: 100%;
  }

  body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    background-color: #f5f7fa;
    color: #333;
    margin: 0;
    padding: 0;
  }

  .main-content {
    display: flex;
    min-height: 100vh;
  }

  .content {
    flex: 1;
    padding: 30px;
    background-color: #fff;
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    margin: 15px;
  }

  .topbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    padding-bottom: 15px;
    border-bottom: 1px solid #eaedf2;
  }

  .topbar h1 {
    margin: 0;
    font-size: 28px;
    font-weight: 600;
    color: var(--dark-color);
  }

  .profile {
    width: 40px;
    height: 40px;
    background-color: #e2e8f0;
    border-radius: 50%;
    cursor: pointer;
  }

  .date-filters {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    padding: 15px;
    background-color: #f9fafd;
    border-radius: var(--border-radius);
  }

  .filter-group, .custom-date-group, .export-group {
    display: flex;
    align-items: center;
    margin: 5px 0;
  }

  .date-filters .date-filter {
    background-color: #fff;
    border: 1px solid #e2e8f0;
    color: #64748b;
    padding: 10px 16px;
    margin-right: 8px;
    border-radius: 6px;
    cursor: pointer;
    transition: all var(--transition-speed);
    font-weight: 500;
    font-size: 14px;
  }

  .date-filters .date-filter.active {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: #fff;
  }

  .date-filters .date-filter:hover:not(.active) {
    background-color: #e2e8f0;
  }

  .date-separator {
    margin: 0 8px;
    color: #64748b;
  }

  .date-filters input[type="date"] {
    padding: 10px 14px;
    margin-right: 8px;
    border: 1px solid #e2e8f0;
    border-radius: 6px;
    background-color: #fff;
    color: #333;
    font-size: 14px;
    transition: border-color var(--transition-speed);
  }

  .date-filters input[type="date"]:focus {
    border-color: var(--primary-color);
    outline: none;
  }

  .date-filters .apply-filter {
    background-color: var(--primary-color);
    border: none;
    color: #fff;
    padding: 10px 16px;
    border-radius: 6px;
    cursor: pointer;
    transition: background-color var(--transition-speed);
    font-weight: 500;
    font-size: 14px;
  }

  .date-filters .apply-filter:hover {
    background-color: var(--secondary-color);
  }

  .date-filters .export-btn {
    background-color: #fff;
    border: 1px solid #e2e8f0;
    color: #64748b;
    padding: 10px 16px;
    margin-left: 8px;
    border-radius: 6px;
    cursor: pointer;
    transition: all var(--transition-speed);
    display: flex;
    align-items: center;
    font-weight: 500;
    font-size: 14px;
  }

  .date-filters .export-btn:hover {
    background-color: #f8fafc;
    border-color: #cbd5e1;
    color: #334155;
  }

  .date-filters .export-btn i {
    margin-right: 8px;
  }

  #exportExcel {
    color: #059669;
  }

  #exportExcel:hover {
    background-color: #ecfdf5;
    border-color: #059669;
  }

  #exportPdf {
    color: #dc2626;
  }

  #exportPdf:hover {
    background-color: #fef2f2;
    border-color: #dc2626;
  }

  .dashboard-cards {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 24px;
  }

  .card {
    background-color: #fff;
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    transition: transform var(--transition-speed), box-shadow var(--transition-speed);
    overflow: hidden;
    border: 1px solid #f0f0f0;
  }

  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
  }

  .card-body {
    padding: 24px;
    display: flex;
    align-items: center;
  }

  .card-body i {
    font-size: 36px;
    margin-right: 16px;
    background-color: #f0f5ff;
    padding: 16px;
    border-radius: 12px;
    color: var(--primary-color);
  }

  .card-content {
    flex: 1;
  }

  .card-title {
    font-size: 16px;
    margin: 0 0 8px 0;
    color: #64748b;
    font-weight: 500;
  }

  .card-text {
    font-size: 24px;
    margin: 0;
    color: #1e293b;
    font-weight: 600;
  }

  .sales-card .card-body i {
    background-color: #f0f7ff;
    color: #3b82f6;
  }

  .orders-card .card-body i {
    background-color: #f0f5ff;
    color: #4f46e5;
  }

  .returns-card .card-body i {
    background-color: #fff0f6;
    color: #e11d48;
  }

  .pending-card .card-body i {
    background-color: #fff7ed;
    color: #ea580c;
  }

  .delivered-card .card-body i {
    background-color: #ecfdf5;
    color: #10b981;
  }

  .shipped-card .card-body i {
    background-color: #eff6ff;
    color: #2563eb;
  }

  .users-card .card-body i {
    background-color: #f5f3ff;
    color: #8b5cf6;
  }

  .discount-card .card-body i {
    background-color: #fdf2f8;
    color: #db2777;
  }

  @media (max-width: 1024px) {
    .dashboard-cards {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
    .top-sellers-container {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 768px) {
    .content {
      padding: 20px;
      margin: 10px;
    }
    
    .date-filters {
      flex-direction: column;
      align-items: stretch;
    }
    
    .filter-group, .custom-date-group, .export-group {
      width: 100%;
      margin-bottom: 10px;
      justify-content: space-between;
    }
    
    .date-filters .export-btn {
      margin-left: 0;
      margin-right: 8px;
    }
  }

  @media (max-width: 480px) {
    .dashboard-cards {
      grid-template-columns: 1fr;
    }
    
    .topbar {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .topbar h1 {
      margin-bottom: 10px;
    }
  }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
let salesChart;

function updateChart(dailySales, dailyOrders, dailyDiscounts) {
    const ctx = document.getElementById('salesChart').getContext('2d');
    
    if (salesChart) {
        salesChart.destroy();
    }

    const labels = dailySales.map(sale => sale._id);
    const datasets = [
        {
            label: 'Sales Amount (₹)',
            data: dailySales.map(sale => sale.total),
            borderColor: 'rgb(67, 97, 238)',
            backgroundColor: 'rgba(67, 97, 238, 0.2)',
            fill: true,
            tension: 0.4,
            pointRadius: 4,
            pointHoverRadius: 6,
            hidden: !document.getElementById('toggleSales').checked
        },
        {
            label: 'Orders Count',
            data: dailyOrders.map(order => order.count),
            borderColor: 'rgb(74, 222, 128)',
            backgroundColor: 'rgba(74, 222, 128, 0.2)',
            fill: true,
            tension: 0.4,
            pointRadius: 4,
            pointHoverRadius: 6,
            hidden: !document.getElementById('toggleOrders').checked
        },
        {
            label: 'Discounts (₹)',
            data: dailyDiscounts.map(discount => discount.total),
            borderColor: 'rgb(244, 63, 94)',
            backgroundColor: 'rgba(244, 63, 94, 0.2)',
            fill: true,
            tension: 0.4,
            pointRadius: 4,
            pointHoverRadius: 6,
            hidden: !document.getElementById('toggleDiscounts').checked
        }
    ];

    salesChart = new Chart(ctx, {
        type: 'line',
        data: { labels, datasets },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            animation: { duration: 1000, easing: 'easeOutQuart' },
            plugins: {
                legend: { position: 'top', labels: { boxWidth: 20, padding: 20, font: { size: 14 } } },
                tooltip: {
                    mode: 'index',
                    intersect: false,
                    callbacks: {
                        label: context => {
                            let prefix = context.dataset.label === 'Orders Count' ? '' : '₹';
                            return `${context.dataset.label}: ${prefix}${context.parsed.y.toFixed(2)}`;
                        }
                    }
                }
            },
            scales: {
                x: { title: { display: true, text: 'Date', font: { size: 16 } }, grid: { color: 'rgba(0, 0, 0, 0.05)' } },
                y: { 
                    title: { display: true, text: 'Values', font: { size: 16 } }, 
                    beginAtZero: true, 
                    grid: { color: 'rgba(0, 0, 0, 0.05)' }, 
                    ticks: { callback: value => value >= 1000 ? `${value / 1000}k` : value }
                }
            },
            elements: { line: { borderWidth: 2 }, point: { pointStyle: 'circle' } }
        }
    });
}

document.addEventListener('DOMContentLoaded', function() {
    const dailySales = JSON.parse('<%- dailySales %>');
    const dailyOrders = JSON.parse('<%- dailyOrders %>');
    const dailyDiscounts = JSON.parse('<%- dailyDiscounts %>');
    updateChart(dailySales, dailyOrders, dailyDiscounts);

    document.getElementById('toggleSales').addEventListener('change', function() {
        salesChart.data.datasets[0].hidden = !this.checked;
        salesChart.update();
    });
    document.getElementById('toggleOrders').addEventListener('change', function() {
        salesChart.data.datasets[1].hidden = !this.checked;
        salesChart.update();
    });
    document.getElementById('toggleDiscounts').addEventListener('change', function() {
        salesChart.data.datasets[2].hidden = !this.checked;
        salesChart.update();
    });

    const urlParams = new URLSearchParams(window.location.search);
    const startDateParam = urlParams.get('startDate');
    const endDateParam = urlParams.get('endDate');

    if (startDateParam && endDateParam) {
        document.getElementById("startDate").value = startDateParam;
        document.getElementById("endDate").value = endDateParam;

        const buttons = document.querySelectorAll(".date-filter");
        buttons.forEach(btn => btn.classList.remove("active"));

        const start = new Date(startDateParam);
        const end = new Date(endDateParam);
        const diffTime = Math.abs(end - start);
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

        if (diffDays === 1) document.querySelector('[data-range="1"]').classList.add("active");
        else if (diffDays === 7) document.querySelector('[data-range="7"]').classList.add("active");
        else if (diffDays === 30) document.querySelector('[data-range="30"]').classList.add("active");
        else if (diffDays === 365) document.querySelector('[data-range="365"]').classList.add("active"); // Highlight 1 Year if selected
    }

    document.querySelectorAll(".date-filter").forEach(button => {
        button.addEventListener("click", function() {
            document.querySelectorAll(".date-filter").forEach(btn => btn.classList.remove("active"));
            this.classList.add("active");

            const range = parseInt(this.getAttribute("data-range"));
            const endDate = new Date();
            const startDate = new Date();
            startDate.setDate(endDate.getDate() - (range - 1)); // Works for all ranges, including 365

            document.getElementById("startDate").value = formatDate(startDate);
            document.getElementById("endDate").value = formatDate(endDate);

            applyFilter();
        });
    });

    document.querySelector(".apply-filter").addEventListener("click", applyFilter);

    document.getElementById("exportExcel").addEventListener("click", function() {
        exportData('excel');
    });

    document.getElementById("exportPdf").addEventListener("click", function() {
        exportData('pdf');
    });

    document.getElementById("startDate").addEventListener("keyup", function(event) {
        if (event.key === "Enter") applyFilter();
    });

    document.getElementById("endDate").addEventListener("keyup", function(event) {
        if (event.key === "Enter") applyFilter();
    });

    const cards = document.querySelectorAll('.card');
    cards.forEach((card, index) => {
        setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, 100 * index);
    });
    
    cards.forEach(card => {
        card.addEventListener('click', function() {
            this.classList.add('card-clicked');
            setTimeout(() => this.classList.remove('card-clicked'), 300);
        });
    });
});

function formatDate(date) {
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const day = String(date.getDate()).padStart(2, '0');
    return `${year}-${month}-${day}`;
}

function applyFilter() {
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;

    if (!startDate || !endDate) {
        alert("Please select both start and end dates");
        return;
    }

    if (new Date(startDate) > new Date(endDate)) {
        alert("Start date cannot be after end date");
        return;
    }

    window.location.href = `/admin/dashboard?startDate=${startDate}&endDate=${endDate}`;
}

function exportData(type) {
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;

    if (!startDate || !endDate) {
        alert("Please select both start and end dates for export");
        return;
    }

    if (new Date(startDate) > new Date(endDate)) {
        alert("Start date cannot be after end date");
        return;
    }
    
    const endpoint = type === 'excel' ? '/admin/export-excel' : '/admin/export-pdf';
    window.location.href = `${endpoint}?startDate=${startDate}&endDate=${endDate}`;
}

window.addEventListener('resize', function() {
    const width = window.innerWidth;
    const dateFilters = document.querySelector('.date-filters');
    
    if (width <= 768) dateFilters.classList.add('stacked');
    else dateFilters.classList.remove('stacked');
});

window.dispatchEvent(new Event('resize'));
</script>

<style>
  .card {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.4s ease-out, transform 0.4s ease-out, box-shadow var(--transition-speed), background-color var(--transition-speed);
  }
  
  .card-clicked {
    animation: card-pulse 0.3s ease-in-out;
  }
  
  @keyframes card-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(0.98); }
    100% { transform: scale(1); }
  }
  
  .date-filters.stacked .filter-group,
  .date-filters.stacked .custom-date-group,
  .date-filters.stacked .export-group {
    margin-bottom: 15px;
  }
  
  [data-tooltip] {
    position: relative;
    cursor: help;
  }
  
  [data-tooltip]:before {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    padding: 8px 12px;
    background-color: #333;
    color: white;
    border-radius: 4px;
    font-size: 12px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s, visibility 0.2s;
    z-index: 10;
  }
  
  [data-tooltip]:hover:before {
    opacity: 1;
    visibility: visible;
  }
  
  @media print {
    .date-filters, .profile, .chart-controls, .top-sellers-container {
      display: none !important;
    }
    
    .card {
      break-inside: avoid;
      box-shadow: none !important;
      border: 1px solid #ccc !important;
    }
    
    .dashboard-cards {
      display: grid;
      grid-template-columns: repeat(2, 1fr) !important;
    }
    
    .main-content, .content {
      margin: 0 !important;
      padding: 0 !important;
      box-shadow: none !important;
    }
    
    .topbar {
      margin-bottom: 20px !important;
      border-bottom: 2px solid #000 !important;
    }
    
    .topbar h1 {
      font-size: 24px !important;
    }
    
    .card-body i {
      font-size: 24px !important;
      padding: 10px !important;
    }
    
    .card-text {
      font-size: 18px !important;
    }
    
    body {
      background-color: white !important;
    }
    
    @page {
      margin: 1cm;
    }
  }
</style>

<%- include("../../views/partials/admin/footer") %>